openapi: 3.0.3
info:
  title: Application authentication API
  version: 1.0.0
  description: >
    # Introduction
    
    This page shows all possible API endopoint for generating a valid access token for a given application requesting permissions to a Bookizon shop owner.
    
    # The authorization flow

    Follow these steps in order to get an access token to be used as Bearer token for subsequent API calls
    
    1. Use the application api_key (generated on the Bookizon developer portal) to generate an authorization code and redirect the user (the business owner) to the /authorize endpoint
    2. If the user is already logged into the Bookizon dashboard an authorization page is showed, otherwise a login operation is requested before displaying the authorization page
    3. After the user authorize your application it is redirected to your callback URL along with the accessToken query string parameter

    You can store securely the access token and use it as bearer token for your next API requests
    
servers:
  - url: https://bookizon.it/webservice
paths:
  /auth/get-authorization-code:
    post:
      summary: Exchange an application API key for an authorization token
      operationId: getAuthorizationToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAuthorizationCodeRequest'
      responses:
        '200':
          description: Authorization token generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationTokenResponse'
        '401':
          description: Unauthorized – invalid application ID or API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/invalidate-access-token:
    post:
      summary: Invalidate an application access token
      operationId: invalidateAccessToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvalidateAccessTokenRequest'
      responses:
        '200':
          description: Access token invalidated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidateAccessTokenResponse'
        '401':
          description: Unauthorized – invalid credentials or token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error – failed to invalidate token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/check-access-token:
    post:
      summary: Check if an access token is valid
      operationId: checkAccessToken
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Access token is valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckAccessTokenResponse'
        '401':
          description: Unauthorized – invalid or missing access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    GetAuthorizationCodeRequest:
      type: object
      required:
        - application_id
        - api_key
      properties:
        application_id:
          type: integer
          example: 123
        api_key:
          type: string
          example: abcd1234
        permissions:
          type: array
          description: >
            List of permissions to request. Each item must be one of the allowed permissions.
          items:
            type: string
            enum:
              - read_users
              - create_users
              - update_users
              - delete_users
              - contenuti
              - seat_books
              - read_service_categories
              - read_services
              - read_product_categories
              - read_products
              - read_promotions
          example:
            - read_users
            - read_products
    AuthorizationTokenResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          description: The generated authorization token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        data:
          nullable: true
          description: Reserved for response data (null here)
    InvalidateAccessTokenRequest:
      type: object
      required:
        - application_id
        - api_key
        - token
      properties:
        application_id:
          type: integer
          example: 123
        api_key:
          type: string
          example: abcd1234
        token:
          type: string
          example: efgh5678
    InvalidateAccessTokenResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Access token invalidated successfully
        data:
          nullable: true
          description: Reserved for response data (null here)
    CheckAccessTokenResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          nullable: true
          type: string
        data:
          nullable: true
          type: object
    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: Unauthorized access